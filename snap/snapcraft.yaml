name: cmake
summary: "Cross-platform software build system generator"
description: |
  CMake is an open-source, cross-platform family of tools designed
  to build, test and package software. CMake is used to control the
  software compilation process using simple platform and compiler
  independent configuration files, and generate native makefiles
  and workspaces that can be used in the compiler environment of
  your choice.

  This snap is maintained separately from the CMake project by one
  of the CMake co-maintainers.

  * Report CMake bugs: https://gitlab.kitware.com/cmake/cmake/issues
  * Ask CMake questions in the forum: https://discourse.cmake.org
  * Get the book _Professional CMake: A Practical Guide_: https://crascit.com/professional-cmake/
  * Follow @crascit on Twitter at https://twitter.com/crascit

license: BSD-3-Clause
title: CMake
icon: snap/gui/CMake_Logo.png

confinement: classic
grade: stable

# The core20 base doesn't support the i386 architecture
base: core20
architectures: [amd64, arm64, armhf, ppc64el, s390x]

# We use the version that the built cmake executable reports
adopt-info: cmake

apps:
  cmake-gui:
    command: bin/desktop-launch $SNAP/bin/cmake-gui
    desktop: share/applications/cmake-gui.desktop
  ccmake:
    command: bin/ccmake
  cmake:
    command: bin/cmake
    completer: share/bash-completion/completions/cmake
  cpack:
    command: bin/cpack
    completer: share/bash-completion/completions/cmake.cpack
  ctest:
    command: bin/ctest
    completer: share/bash-completion/completions/cmake.ctest

parts:
  cmake:
    after: [qt5]
    source: "https://gitlab.kitware.com/cmake/cmake.git"
    source-depth: 1
    source-branch: master
    source-type: git
    plugin: make
    build-environment:
      - LC_ALL: C.UTF-8
      - LANG: C.UTF-8
    override-build: |
      ${SNAPCRAFT_PART_SRC}/bootstrap \
        --parallel=${SNAPCRAFT_PARALLEL_BUILD_COUNT} \
        --docdir=doc/cmake \
        --sphinx-html \
        --sphinx-man \
        --sphinx-qthelp \
        --qt-gui \
        -- \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/ \
        -DBUILD_TESTING=OFF \
        -DCMake_GUI_DISTRIBUTE_WITH_Qt_LGPL=3
      snapcraftctl build
      echo 'message(${CMAKE_VERSION})' > ${SNAPCRAFT_PART_BUILD}/ver.cmake
      CMAKE_VERSION=$(${SNAPCRAFT_PART_BUILD}/bin/cmake -P ${SNAPCRAFT_PART_BUILD}/ver.cmake 2>&1)
      snapcraftctl set-version $CMAKE_VERSION
      sed -i s+^Icon=.*+Icon=/share/icons/hicolor/128x128/apps/CMakeSetup.png+g \
        $SNAPCRAFT_PART_INSTALL/share/applications/cmake-gui.desktop
      if ! test -e "$SNAPCRAFT_PART_INSTALL/share/bash-completion/completions" ; then
        mkdir -p $SNAPCRAFT_PART_INSTALL/share/bash-completion/completions
        cd $SNAPCRAFT_PART_INSTALL/share/bash-completion/completions
        ln -f -s ../../cmake-*/completions/cmake cmake
        ln -f -s ../../cmake-*/completions/cpack cmake.cpack
        ln -f -s ../../cmake-*/completions/ctest cmake.ctest
        sed -E -i 's+^(complete .*) cpack$+\1 cmake.cpack+g' ../../cmake-*/completions/cpack
        sed -E -i 's+^(complete .*) ctest$+\1 cmake.ctest+g' ../../cmake-*/completions/ctest
      else
        cd $SNAPCRAFT_PART_INSTALL/share/bash-completion/completions
        sed -E -i 's+^(complete .*) cpack$+\1 cmake.cpack+g' cpack
        sed -E -i 's+^(complete .*) ctest$+\1 cmake.ctest+g' ctest
        ln -f -s cpack cmake.cpack
        ln -f -s ctest cmake.ctest
      fi
    build-packages:
      - build-essential
      - libssl-dev
      - libncurses5-dev
      - python3-sphinx
      - qtbase5-dev
      - qt5-default
      - qttools5-dev-tools
    stage-packages:
      - libssl1.1
      - libncurses5
      - libtinfo5

  qt5:
      source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
      source-subdir: qt
      plugin: make
      make-parameters: ["FLAVOR=qt5"]
      build-packages:
        - build-essential
        - qtbase5-dev
        - dpkg-dev
      stage-packages:
        - libxkbcommon0
        - ttf-ubuntu-font-family
        - dmz-cursor-theme
        - light-themes
        - adwaita-icon-theme
        - gnome-themes-standard
        - shared-mime-info
        - libqt5gui5
        - libgdk-pixbuf2.0-0
        - libqt5svg5 # for loading icon themes which are svg
        - try: [appmenu-qt5] # not available on core18
        - locales-all
        - libgtk2.0-0

  # Workaround for cmake-gui crash on startup with intel driver
  mesa:
    after: [qt5]
    plugin: nil
    stage-packages:
      - libgl1-mesa-dri
    build-attributes:
      - no-patchelf # Otherwise snapcraft may strip the build ID and cause the driver to crash
    prime:
      - -lib/udev
      - -usr/doc
      - -usr/doc-base
      - -usr/share/applications
